name: CI/CD Cinéphoria

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Construction de l'image Docker
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout du code
        uses: actions/checkout@v3

      - name: Configuration de Docker BuildX
        uses: docker/setup-buildx-action@v2

      - name: Connexion à Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Installer Git, unzip et zip
        run: |
          sudo apt-get update
          sudo apt-get install -y git unzip zip

      - name: Construction et push de l'image Docker
        run: |
          docker compose build
          docker compose push

  test:
    name: Exécution des tests PHP dans Docker
    runs-on: ubuntu-22.04
    needs: build

    steps:
      - name: Checkout du code
        uses: actions/checkout@v3

      - name: Démarrage de l'environnement de test avec Docker Compose
        run: |
          docker compose up -d --build
          sleep 15  # Laisser le temps aux services de démarrer

      - name: Installation des dépendances PHP
        run: |
          docker exec cinephoria_web composer install --no-interaction --prefer-dist
          docker exec cinephoria_web composer dump-autoload -o

      - name: Vérifier les fichiers PHP
        run: docker exec cinephoria_web php -l /var/www/html/index.php

      - name: Exécution des tests PHPUnit
        run: docker exec cinephoria_web vendor/bin/phpunit tests/functional/LoginTest.php

      - name: Arrêt et nettoyage des conteneurs de test
        run: docker compose down

  deploy:
    name: Déploiement sur le VPS Hostinger
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Connexion et déploiement sur le VPS Hostinger
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          cd /var/www/html/cinephoria
          docker compose pull
          docker compose down
          docker compose up -d --build
          EOF
